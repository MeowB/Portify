import React, { useCallback, useEffect, useRef, useState } from 'react'
import { useDropzone } from 'react-dropzone'
import './InputImage.scss'
import type { InputImageProps } from '../../types/InputImageProps'

const InputImage: React.FC<InputImageProps> = ({ type, setSelectedFile, dragOver, imageUrl }) => {
	const [preview, setPreview] = useState<string | null>(imageUrl || null)
	const fileInputRef = useRef<HTMLInputElement>(null)

	const onDrop = useCallback((acceptedFiles: File[]) => {
		const file = acceptedFiles[0]

		if (file) {
			setSelectedFile(file)
			setPreview(URL.createObjectURL(file))
		}
	}, [])

	const { getRootProps } = useDropzone({
		onDrop,
		accept: { 'image/* ': [] },
		multiple: false
	})

	const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		const file = e.target.files?.[0];
		console.log(file);
		if (file) {
			const fileType = file.type;
			if (fileType.startsWith('image/')) {
				const previewUrl = URL.createObjectURL(file);
				setPreview(previewUrl);
				setSelectedFile(file)
			} else {
				alert('Please upload an image file.');
			}
		}
	};

	const handleUploadClick = (e: React.MouseEvent<HTMLButtonElement>) => {
		e.preventDefault()
		fileInputRef.current?.click()
	}


	const handleRemoveClick = (e: React.MouseEvent<HTMLButtonElement>) => {
		e.preventDefault();
		setSelectedFile(null);
		setPreview(null); // Clear the preview state
		const input = document.getElementById('profileImage') as HTMLInputElement;
		if (input) input.value = ''
		console.log('image removed')
	}

	useEffect(() => {
		if (imageUrl) {
			setPreview(imageUrl); // Updated to use 'imageUrl'
		} else {
			setPreview(null);
		}
	}, [imageUrl]);


	return (
		<div
			className={`form-group image-input ${dragOver ? 'drag-over' : ''}`}
			{...getRootProps()}
		>
			<input
				type="file"
				id="profileImage"
				className="form-input"
				accept="image/*"
				onChange={handleFileChange}
				ref={fileInputRef}
			/>
			<div className="dropzone">
				<div className={type === 'profile' ? "profile-image" : "projects-image"}>
					{preview ? (
						<div className="preview-wrapper">
							<img className={type === 'profile' ? 'profile-preview' : 'project-preview'} src={preview} alt="preview" />
						</div>
					) : type === 'profile' ? (
						<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M12 2C10.0605 2.00369 8.16387 2.57131 6.54122 3.63374C4.91856 4.69617 3.63988 6.20754 2.86093 7.98377C2.08197 9.76 1.83636 11.7244 2.15401 13.6378C2.47166 15.5511 3.33887 17.3308 4.64999 18.76C5.58641 19.775 6.72293 20.5851 7.98793 21.1392C9.25292 21.6933 10.619 21.9793 12 21.9793C13.381 21.9793 14.7471 21.6933 16.012 21.1392C17.277 20.5851 18.4136 19.775 19.35 18.76C20.6611 17.3308 21.5283 15.5511 21.846 13.6378C22.1636 11.7244 21.918 9.76 21.139 7.98377C20.3601 6.20754 19.0814 4.69617 17.4588 3.63374C15.8361 2.57131 13.9395 2.00369 12 2ZM12 20C9.92845 19.9969 7.9389 19.1903 6.44999 17.75C6.90203 16.6495 7.67102 15.7083 8.65924 15.0459C9.64746 14.3835 10.8103 14.0298 12 14.0298C13.1897 14.0298 14.3525 14.3835 15.3407 15.0459C16.329 15.7083 17.0979 16.6495 17.55 17.75C16.0611 19.1903 14.0715 19.9969 12 20ZM9.99999 10C9.99999 9.60444 10.1173 9.21776 10.337 8.88886C10.5568 8.55996 10.8692 8.30362 11.2346 8.15224C11.6001 8.00087 12.0022 7.96126 12.3902 8.03843C12.7781 8.1156 13.1345 8.30608 13.4142 8.58579C13.6939 8.86549 13.8844 9.22186 13.9616 9.60982C14.0387 9.99778 13.9991 10.3999 13.8477 10.7654C13.6964 11.1308 13.44 11.4432 13.1111 11.6629C12.7822 11.8827 12.3955 12 12 12C11.4696 12 10.9608 11.7893 10.5858 11.4142C10.2107 11.0391 9.99999 10.5304 9.99999 10ZM18.91 16C18.0165 14.4718 16.6414 13.283 15 12.62C15.5092 12.0427 15.8409 11.3307 15.9555 10.5694C16.07 9.80822 15.9625 9.03011 15.6457 8.3285C15.329 7.62688 14.8166 7.03156 14.1699 6.61397C13.5232 6.19637 12.7698 5.97425 12 5.97425C11.2302 5.97425 10.4768 6.19637 9.83008 6.61397C9.1834 7.03156 8.67096 7.62688 8.35424 8.3285C8.03752 9.03011 7.92997 9.80822 8.04452 10.5694C8.15906 11.3307 8.49082 12.0427 8.99999 12.62C7.35859 13.283 5.98346 14.4718 5.08999 16C4.37793 14.7871 4.00171 13.4065 3.99999 12C3.99999 9.87827 4.84284 7.84344 6.34313 6.34315C7.84342 4.84285 9.87826 4 12 4C14.1217 4 16.1566 4.84285 17.6568 6.34315C19.1571 7.84344 20 9.87827 20 12C19.9983 13.4065 19.622 14.7871 18.91 16Z" fill="#20293A" />
						</svg>

					) : (
						<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M18 15V5C18 4.20435 17.6839 3.44129 17.1213 2.87868C16.5587 2.31607 15.7956 2 15 2H5C4.20435 2 3.44129 2.31607 2.87868 2.87868C2.31607 3.44129 2 4.20435 2 5V15C2 15.7956 2.31607 16.5587 2.87868 17.1213C3.44129 17.6839 4.20435 18 5 18H15C15.7956 18 16.5587 17.6839 17.1213 17.1213C17.6839 16.5587 18 15.7956 18 15ZM4 5C4 4.73478 4.10536 4.48043 4.29289 4.29289C4.48043 4.10536 4.73478 4 5 4H15C15.2652 4 15.5196 4.10536 15.7071 4.29289C15.8946 4.48043 16 4.73478 16 5V9.36L14.92 8.27C14.44 7.78988 13.7889 7.5201 13.11 7.52C12.4315 7.52228 11.7812 7.79173 11.3 8.27L10.39 9.18L9.58 8.37C9.03194 7.83074 8.29388 7.52851 7.525 7.52851C6.75612 7.52851 6.01806 7.83074 5.47 8.37L4 9.85V5ZM4.12 15.45C4.04289 15.3124 4.00162 15.1577 4 15V12.67L6.88 9.79C6.96456 9.70504 7.06507 9.63762 7.17576 9.59162C7.28645 9.54561 7.40513 9.52193 7.525 9.52193C7.64487 9.52193 7.76356 9.54561 7.87424 9.59162C7.98493 9.63762 8.08544 9.70504 8.17 9.79L9 10.6L4.12 15.45ZM12.72 9.69C12.7693 9.63577 12.8296 9.59259 12.8968 9.56329C12.964 9.53399 13.0367 9.51924 13.11 9.52C13.1833 9.51924 13.256 9.53399 13.3232 9.56329C13.3904 9.59259 13.4507 9.63577 13.5 9.69L16 12.18V15C16 15.2652 15.8946 15.5196 15.7071 15.7071C15.5196 15.8946 15.2652 16 15 16H6.4L12.72 9.69ZM21 6C20.7348 6 20.4804 6.10536 20.2929 6.29289C20.1054 6.48043 20 6.73478 20 7V17C20 17.7956 19.6839 18.5587 19.1213 19.1213C18.5587 19.6839 17.7956 20 17 20H7C6.73478 20 6.48043 20.1054 6.29289 20.2929C6.10536 20.4804 6 20.7348 6 21C6 21.2652 6.10536 21.5196 6.29289 21.7071C6.48043 21.8946 6.73478 22 7 22H17C18.3261 22 19.5979 21.4732 20.5355 20.5355C21.4732 19.5979 22 18.3261 22 17V7C22 6.73478 21.8946 6.48043 21.7071 6.29289C21.5196 6.10536 21.2652 6 21 6Z" fill="#20293A" />
						</svg>
					)}
				</div>
				<p>{type === 'profile' ? 'Image must be 256 x 256px - max 2MB' : 'Image must be PNG or JPEG - max 2MB'}</p>
				<div className="image-buttons">
					<button onClick={(e) => handleUploadClick(e)}>
						<span>
							<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path d="M15.35 6.84995C14.8408 5.67996 13.962 4.70918 12.8484 4.08639C11.7347 3.4636 10.4475 3.22315 9.18411 3.40188C7.9207 3.58061 6.75074 4.16866 5.85352 5.07593C4.95629 5.9832 4.38129 7.15963 4.21664 8.42495C3.42212 8.61522 2.72515 9.09065 2.25808 9.76094C1.79101 10.4312 1.58637 11.2497 1.68302 12.061C1.77967 12.8722 2.17088 13.6197 2.78236 14.1615C3.39384 14.7033 4.18299 15.0017 4.99997 15C5.22098 15 5.43294 14.9122 5.58923 14.7559C5.74551 14.5996 5.8333 14.3876 5.8333 14.1666C5.8333 13.9456 5.74551 13.7336 5.58923 13.5774C5.43294 13.4211 5.22098 13.3333 4.99997 13.3333C4.55794 13.3333 4.13402 13.1577 3.82146 12.8451C3.5089 12.5326 3.3333 12.1086 3.3333 11.6666C3.3333 11.2246 3.5089 10.8007 3.82146 10.4881C4.13402 10.1755 4.55794 9.99995 4.99997 9.99995C5.22098 9.99995 5.43294 9.91216 5.58923 9.75588C5.74551 9.5996 5.8333 9.38763 5.8333 9.16662C5.83543 8.18102 6.18687 7.22808 6.82519 6.47711C7.46351 5.72613 8.34738 5.22575 9.31976 5.06485C10.2921 4.90395 11.2901 5.09296 12.1363 5.59829C12.9825 6.10363 13.6221 6.89257 13.9416 7.82495C13.9893 7.96815 14.0749 8.09573 14.1894 8.19406C14.3039 8.2924 14.4429 8.3578 14.5916 8.38329C15.1467 8.48818 15.6499 8.77796 16.0192 9.2054C16.3885 9.63284 16.6021 10.1728 16.6253 10.7372C16.6485 11.3016 16.4799 11.8572 16.1469 12.3135C15.8139 12.7698 15.3362 13.0999 14.7916 13.25C14.5773 13.3052 14.3936 13.4434 14.2811 13.634C14.1686 13.8247 14.1364 14.0522 14.1916 14.2666C14.2469 14.481 14.385 14.6647 14.5757 14.7772C14.7664 14.8897 14.9939 14.9219 15.2083 14.8666C16.0853 14.6349 16.8627 14.1233 17.4225 13.4095C17.9822 12.6957 18.2938 11.8188 18.3098 10.9118C18.3259 10.0049 18.0455 9.11749 17.5113 8.38439C16.9771 7.65128 16.2182 7.11254 15.35 6.84995ZM10.5916 8.57495C10.5124 8.49909 10.4189 8.43962 10.3166 8.39995C10.1138 8.3166 9.88619 8.3166 9.6833 8.39995C9.58101 8.43962 9.48756 8.49909 9.4083 8.57495L6.9083 11.075C6.75138 11.2319 6.66323 11.4447 6.66323 11.6666C6.66323 11.8885 6.75138 12.1014 6.9083 12.2583C7.06522 12.4152 7.27805 12.5034 7.49997 12.5034C7.72189 12.5034 7.93472 12.4152 8.09164 12.2583L9.16664 11.175V15.8333C9.16664 16.0543 9.25443 16.2663 9.41071 16.4225C9.56699 16.5788 9.77896 16.6666 9.99997 16.6666C10.221 16.6666 10.4329 16.5788 10.5892 16.4225C10.7455 16.2663 10.8333 16.0543 10.8333 15.8333V11.175L11.9083 12.2583C11.9858 12.3364 12.0779 12.3984 12.1795 12.4407C12.281 12.483 12.39 12.5048 12.5 12.5048C12.61 12.5048 12.7189 12.483 12.8204 12.4407C12.922 12.3984 13.0142 12.3364 13.0916 12.2583C13.1697 12.1808 13.2317 12.0886 13.274 11.9871C13.3164 11.8856 13.3381 11.7766 13.3381 11.6666C13.3381 11.5566 13.3164 11.4477 13.274 11.3461C13.2317 11.2446 13.1697 11.1524 13.0916 11.075L10.5916 8.57495Z" fill="#20293A" />
							</svg>
						</span>
						{type === 'profile' ? 'Upload Profile Image' : 'Upload Image'}

					</button>
					<button onClick={(e) => handleRemoveClick(e)}>
						<span>
							<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path d="M8.33333 15C8.55435 15 8.76631 14.9122 8.92259 14.7559C9.07887 14.5996 9.16667 14.3876 9.16667 14.1666V9.16663C9.16667 8.94561 9.07887 8.73365 8.92259 8.57737C8.76631 8.42109 8.55435 8.33329 8.33333 8.33329C8.11232 8.33329 7.90036 8.42109 7.74408 8.57737C7.5878 8.73365 7.5 8.94561 7.5 9.16663V14.1666C7.5 14.3876 7.5878 14.5996 7.74408 14.7559C7.90036 14.9122 8.11232 15 8.33333 15ZM16.6667 4.99996H13.3333V4.16663C13.3333 3.50358 13.0699 2.8677 12.6011 2.39886C12.1323 1.93002 11.4964 1.66663 10.8333 1.66663H9.16667C8.50363 1.66663 7.86774 1.93002 7.3989 2.39886C6.93006 2.8677 6.66667 3.50358 6.66667 4.16663V4.99996H3.33333C3.11232 4.99996 2.90036 5.08776 2.74408 5.24404C2.5878 5.40032 2.5 5.61228 2.5 5.83329C2.5 6.05431 2.5878 6.26627 2.74408 6.42255C2.90036 6.57883 3.11232 6.66663 3.33333 6.66663H4.16667V15.8333C4.16667 16.4963 4.43006 17.1322 4.8989 17.6011C5.36774 18.0699 6.00363 18.3333 6.66667 18.3333H13.3333C13.9964 18.3333 14.6323 18.0699 15.1011 17.6011C15.5699 17.1322 15.8333 16.4963 15.8333 15.8333V6.66663H16.6667C16.8877 6.66663 17.0996 6.57883 17.2559 6.42255C17.4122 6.26627 17.5 6.05431 17.5 5.83329C17.5 5.61228 17.4122 5.40032 17.2559 5.24404C17.0996 5.08776 16.8877 4.99996 16.6667 4.99996ZM8.33333 4.16663C8.33333 3.94561 8.42113 3.73365 8.57741 3.57737C8.73369 3.42109 8.94565 3.33329 9.16667 3.33329H10.8333C11.0543 3.33329 11.2663 3.42109 11.4226 3.57737C11.5789 3.73365 11.6667 3.94561 11.6667 4.16663V4.99996H8.33333V4.16663ZM14.1667 15.8333C14.1667 16.0543 14.0789 16.2663 13.9226 16.4225C13.7663 16.5788 13.5543 16.6666 13.3333 16.6666H6.66667C6.44565 16.6666 6.23369 16.5788 6.07741 16.4225C5.92113 16.2663 5.83333 16.0543 5.83333 15.8333V6.66663H14.1667V15.8333ZM11.6667 15C11.8877 15 12.0996 14.9122 12.2559 14.7559C12.4122 14.5996 12.5 14.3876 12.5 14.1666V9.16663C12.5 8.94561 12.4122 8.73365 12.2559 8.57737C12.0996 8.42109 11.8877 8.33329 11.6667 8.33329C11.4457 8.33329 11.2337 8.42109 11.0774 8.57737C10.9211 8.73365 10.8333 8.94561 10.8333 9.16663V14.1666C10.8333 14.3876 10.9211 14.5996 11.0774 14.7559C11.2337 14.9122 11.4457 15 11.6667 15Z" fill="#DD524C" />
							</svg>

						</span>
						Delete Image
					</button>
				</div>
			</div>
		</div>
	)
}

export default InputImage
